* write tests for argparsing

#* minimize compilation of regexes
#* extend verbose error printing to string list input
#* improve handling of list input when atoms or residues are not present in PDB file
#    - propagate error from expand_residue to parse_residue_list and print all of it at once
#* solve issue with duplicate residue numbers 
#    - add insert codes to PDB file (or use PDBx/mmCIF)
#    - parse insert codes from list inputs for residues (regex?)
#    - update number expansion function to incorporate insertion codes
#    - pass parsed list input at a vec of tuples (isize, Option<String>)
#    - rewrite residue functions to take vec of tuples and check for insertion code
#* rewrite sphere finding functions with RTree
#* add validation for sphere input
#* write struct containing origin atom, radius, include_self and atom/residues for sphere jobs
#* write funtion for processing sphere command line input
#* find more elegant solution to mode.clone() in run() (maybe smart pointers?)
#* find better solution to pdb.clone() in run()
#* find out how to return error from within closure
#* Accept ranges in command line list input
#    - write function to replace use of values_of_t
#* move validation of command line arguments (i.e. List) to argparse module (clap validator_regex); for some reason clap doesn't recognize this so regular validator was used with separate function
#* Implement querying Atom or Residue Names
#* Implement sphere-based query
#* change parsing of List input in add and remove modes
#* move run to lib.rs
#* improve error handling of reading pdb file
#* Maybe refactor with subcommands
#    - add enums for modes
#    - write parsing function that returns an enum variant (based on mode chosen) which contains a struct of command line flags given (which in turn contain potential data)
#* Write tests